// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: communication_protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Networking.Protobuf.CommunicationProtocol {

  /// <summary>Holder for reflection information generated from communication_protocol.proto</summary>
  public static partial class CommunicationProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for communication_protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommunicationProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxjb21tdW5pY2F0aW9uX3Byb3RvY29sLnByb3RvEhVDb21tdW5pY2F0aW9u",
            "UHJvdG9jb2wiTAoHQ29tbWFuZBIwCgR0eXBlGAEgASgOMiIuQ29tbXVuaWNh",
            "dGlvblByb3RvY29sLkNvbW1hbmRUeXBlEg8KB3BheWxvYWQYAiABKAwiqwEK",
            "EE9wZXJhdGlvblJlcXVlc3QSQQoMcmVxdWVzdF9jb2RlGAEgASgOMisuQ29t",
            "bXVuaWNhdGlvblByb3RvY29sLk9wZXJhdGlvblJlcXVlc3RDb2RlEkMKDXJl",
            "c3BvbnNlX2NvZGUYAiABKA4yLC5Db21tdW5pY2F0aW9uUHJvdG9jb2wuT3Bl",
            "cmF0aW9uUmVzcG9uc2VDb2RlEg8KB3BheWxvYWQYAyABKAwiTAoJRXZlbnRE",
            "YXRhEi4KBGNvZGUYASABKA4yIC5Db21tdW5pY2F0aW9uUHJvdG9jb2wuRXZl",
            "bnRDb2RlEg8KB3BheWxvYWQYAiABKAwiLAoQSGFuZHNoYWtlUGF5bG9hZBIY",
            "ChBwcm90b2NvbF92ZXJzaW9uGAEgASgNKjkKC0NvbW1hbmRUeXBlEg4KCk9Q",
            "X1JFUVVFU1QQABIPCgtPUF9SRVNQT05TRRABEgkKBUVWRU5UEAIqIQoJRXZl",
            "bnRDb2RlEgoKBkpPSU5FRBAAEggKBExFRlQQASo2ChRPcGVyYXRpb25SZXF1",
            "ZXN0Q29kZRINCglIQU5EU0hBS0UQABIPCgtSQUlTRV9FVkVOVBABKm0KFU9w",
            "ZXJhdGlvblJlc3BvbnNlQ29kZRIUChBJTlZBTElEX1BST1RPQ09MEAASEQoN",
            "SU5WQUxJRF9MT0dJThABEhQKEElOVkFMSURfUEFTU1dPUkQQAhIVChFIQU5E",
            "U0hBS0VfU1VDQ0VTUxADQiyqAilOZXR3b3JraW5nLlByb3RvYnVmLkNvbW11",
            "bmljYXRpb25Qcm90b2NvbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Networking.Protobuf.CommunicationProtocol.CommandType), typeof(global::Networking.Protobuf.CommunicationProtocol.EventCode), typeof(global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode), typeof(global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Protobuf.CommunicationProtocol.Command), global::Networking.Protobuf.CommunicationProtocol.Command.Parser, new[]{ "Type", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Protobuf.CommunicationProtocol.OperationRequest), global::Networking.Protobuf.CommunicationProtocol.OperationRequest.Parser, new[]{ "RequestCode", "ResponseCode", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Protobuf.CommunicationProtocol.EventData), global::Networking.Protobuf.CommunicationProtocol.EventData.Parser, new[]{ "Code", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Protobuf.CommunicationProtocol.HandshakePayload), global::Networking.Protobuf.CommunicationProtocol.HandshakePayload.Parser, new[]{ "ProtocolVersion" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CommandType {
    [pbr::OriginalName("OP_REQUEST")] OpRequest = 0,
    [pbr::OriginalName("OP_RESPONSE")] OpResponse = 1,
    [pbr::OriginalName("EVENT")] Event = 2,
  }

  public enum EventCode {
    [pbr::OriginalName("JOINED")] Joined = 0,
    [pbr::OriginalName("LEFT")] Left = 1,
  }

  public enum OperationRequestCode {
    [pbr::OriginalName("HANDSHAKE")] Handshake = 0,
    [pbr::OriginalName("RAISE_EVENT")] RaiseEvent = 1,
  }

  public enum OperationResponseCode {
    [pbr::OriginalName("INVALID_PROTOCOL")] InvalidProtocol = 0,
    [pbr::OriginalName("INVALID_LOGIN")] InvalidLogin = 1,
    [pbr::OriginalName("INVALID_PASSWORD")] InvalidPassword = 2,
    [pbr::OriginalName("HANDSHAKE_SUCCESS")] HandshakeSuccess = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.Protobuf.CommunicationProtocol.CommunicationProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      type_ = other.type_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Networking.Protobuf.CommunicationProtocol.CommandType type_ = global::Networking.Protobuf.CommunicationProtocol.CommandType.OpRequest;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Protobuf.CommunicationProtocol.CommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Networking.Protobuf.CommunicationProtocol.CommandType.OpRequest) hash ^= Type.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Networking.Protobuf.CommunicationProtocol.CommandType.OpRequest) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Networking.Protobuf.CommunicationProtocol.CommandType.OpRequest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Networking.Protobuf.CommunicationProtocol.CommandType.OpRequest) {
        Type = other.Type;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Networking.Protobuf.CommunicationProtocol.CommandType) input.ReadEnum();
            break;
          }
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationRequest : pb::IMessage<OperationRequest> {
    private static readonly pb::MessageParser<OperationRequest> _parser = new pb::MessageParser<OperationRequest>(() => new OperationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.Protobuf.CommunicationProtocol.CommunicationProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationRequest(OperationRequest other) : this() {
      requestCode_ = other.requestCode_;
      responseCode_ = other.responseCode_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationRequest Clone() {
      return new OperationRequest(this);
    }

    /// <summary>Field number for the "request_code" field.</summary>
    public const int RequestCodeFieldNumber = 1;
    private global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode requestCode_ = global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode.Handshake;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }

    /// <summary>Field number for the "response_code" field.</summary>
    public const int ResponseCodeFieldNumber = 2;
    private global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode responseCode_ = global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode.InvalidProtocol;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestCode != other.RequestCode) return false;
      if (ResponseCode != other.ResponseCode) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestCode != global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode.Handshake) hash ^= RequestCode.GetHashCode();
      if (ResponseCode != global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode.InvalidProtocol) hash ^= ResponseCode.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestCode != global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode.Handshake) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestCode);
      }
      if (ResponseCode != global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode.InvalidProtocol) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResponseCode);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestCode != global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode.Handshake) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestCode);
      }
      if (ResponseCode != global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode.InvalidProtocol) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseCode);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestCode != global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode.Handshake) {
        RequestCode = other.RequestCode;
      }
      if (other.ResponseCode != global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode.InvalidProtocol) {
        ResponseCode = other.ResponseCode;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestCode = (global::Networking.Protobuf.CommunicationProtocol.OperationRequestCode) input.ReadEnum();
            break;
          }
          case 16: {
            ResponseCode = (global::Networking.Protobuf.CommunicationProtocol.OperationResponseCode) input.ReadEnum();
            break;
          }
          case 26: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventData : pb::IMessage<EventData> {
    private static readonly pb::MessageParser<EventData> _parser = new pb::MessageParser<EventData>(() => new EventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.Protobuf.CommunicationProtocol.CommunicationProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventData(EventData other) : this() {
      code_ = other.code_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventData Clone() {
      return new EventData(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Networking.Protobuf.CommunicationProtocol.EventCode code_ = global::Networking.Protobuf.CommunicationProtocol.EventCode.Joined;
    /// <summary>
    ///TODO: sender (server or other client)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Protobuf.CommunicationProtocol.EventCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    ///TODO: change to dictionary alternatively
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Networking.Protobuf.CommunicationProtocol.EventCode.Joined) hash ^= Code.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != global::Networking.Protobuf.CommunicationProtocol.EventCode.Joined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Networking.Protobuf.CommunicationProtocol.EventCode.Joined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventData other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Networking.Protobuf.CommunicationProtocol.EventCode.Joined) {
        Code = other.Code;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Networking.Protobuf.CommunicationProtocol.EventCode) input.ReadEnum();
            break;
          }
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HandshakePayload : pb::IMessage<HandshakePayload> {
    private static readonly pb::MessageParser<HandshakePayload> _parser = new pb::MessageParser<HandshakePayload>(() => new HandshakePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandshakePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.Protobuf.CommunicationProtocol.CommunicationProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakePayload(HandshakePayload other) : this() {
      protocolVersion_ = other.protocolVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakePayload Clone() {
      return new HandshakePayload(this);
    }

    /// <summary>Field number for the "protocol_version" field.</summary>
    public const int ProtocolVersionFieldNumber = 1;
    private uint protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandshakePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandshakePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolVersion != other.ProtocolVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolVersion != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProtocolVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandshakePayload other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtocolVersion = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
