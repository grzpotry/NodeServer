// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace CommunicationProtocol {

    export enum CommandType {
        OP_REQUEST = "OP_REQUEST",
        OP_RESPONSE = "OP_RESPONSE",
        EVENT = "EVENT",
    }
    export enum EventCode {
        JOINED = "JOINED",
        LEFT = "LEFT",
    }
    export enum OperationRequestCode {
        HANDSHAKE = "HANDSHAKE",
        RAISE_EVENT = "RAISE_EVENT",
    }
    export enum OperationResponseCode {
        INVALID_PROTOCOL = "INVALID_PROTOCOL",
        INVALID_LOGIN = "INVALID_LOGIN",
        INVALID_PASSWORD = "INVALID_PASSWORD",
        HANDSHAKE_SUCCESS = "HANDSHAKE_SUCCESS",
    }
    export interface Command {
        type?: CommandType;
        payload?: Uint8Array;
    }

    export interface OperationRequest {
        request_code?: OperationRequestCode;
        payload?: Uint8Array;
    }

    export interface OperationResponse {
        request_code?: OperationRequestCode;
        response_code?: OperationResponseCode;
        payload?: Uint8Array;
    }

    export interface EventData {
        //TODO: sender (server or other client)
        code?: EventCode;
        payload?: Uint8Array; // TODO: change to dictionary alternatively
    }

    export interface HandshakePayload {
        protocol_version?: number;
    }

}

